# SPDX-License-Identifier: Apache-2.0
name: CI

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.11"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Ruff
        run: ruff check

      - name: Black
        run: black --check .

  mypy:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run mypy
        run: mypy src

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Prepare mock credentials
        run: echo '{}' > /tmp/mock-sa.json

      - name: Run pytest suite
        env:
          PROJECT_ID: test-project
          REGION: us
          DOC_AI_LOCATION: us
          DOC_AI_PROCESSOR_ID: processor-dummy
          DOC_AI_SPLITTER_PROCESSOR_ID: processor-split-dummy
          OPENAI_API_KEY: dummy-key
          DRIVE_INPUT_FOLDER_ID: drive-input
          DRIVE_REPORT_FOLDER_ID: drive-output
          INTAKE_GCS_BUCKET: intake-bucket
          OUTPUT_GCS_BUCKET: output-bucket
          SUMMARY_BUCKET: summary-bucket
          INTERNAL_EVENT_TOKEN: integration-token
          STUB_MODE: "true"
          USE_REFACTORED_SUMMARISER: "true"
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/mock-sa.json
          SERVICE_ACCOUNT_JSON: '{"type":"service_account","project_id":"test"}'
        run: pytest

  security:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Bandit
        run: bandit -r src -ll

      - name: detect-secrets
        run: |
          python - <<'PY'
          import json
          import subprocess
          import sys

          cmd = [sys.executable, "-m", "detect_secrets", "scan", "src"]
          result = subprocess.run(cmd, capture_output=True, text=True, check=True)
          payload = json.loads(result.stdout or "{}")
          findings = payload.get("results") or {}
          total = sum(len(items) for items in findings.values())
          if total:
              print(result.stdout)
              raise SystemExit(f"detect-secrets found {total} potential secrets.")
          PY

      - name: pip-audit (requirements)
        run: pip-audit --progress-spinner=off -r requirements.txt

      - name: pip-audit (dev requirements)
        run: pip-audit --progress-spinner=off -r requirements-dev.txt

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          files: Dockerfile

  trivy-report:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Trivy filesystem scan (report only)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          scan-type: fs
          scan-ref: .
          ignore-unfixed: true
          exit-code: "0"
          severity: "CRITICAL,HIGH,MEDIUM"
          format: "table"

  trivy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          scan-type: fs
          scan-ref: .
          ignore-unfixed: true
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          format: "table"
