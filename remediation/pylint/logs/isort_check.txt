--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/api/ingest.py:before	2025-10-29 23:21:06.362348
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/api/ingest.py:after	2025-10-30 05:52:43.937246
@@ -5,18 +5,20 @@
 import base64
 import json
 import logging
+import os
 import secrets
 import time
 import uuid
 from typing import Any, Dict, Mapping, MutableMapping
-import os
 
 from fastapi import APIRouter, HTTPException, Request
 from fastapi.responses import JSONResponse
 from pydantic import (
     BaseModel,
     Field,
-    ValidationError as PydanticValidationError,
+)
+from pydantic import ValidationError as PydanticValidationError
+from pydantic import (
     field_validator,
 )
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/api/process.py:before	2025-10-29 23:21:06.362617
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/api/process.py:after	2025-10-30 05:52:43.939913
@@ -12,16 +12,16 @@
 from fastapi.responses import JSONResponse, Response
 
 from src.errors import (
+    DriveServiceError,
+    OCRServiceError,
     PDFGenerationError,
+    SummarizationError,
     ValidationError,
-    OCRServiceError,
-    DriveServiceError,
-    SummarizationError,
 )
 from src.services.docai_helper import clean_ocr_output
 from src.services.supervisor import CommonSenseSupervisor
+from src.utils.logging_utils import structured_log
 from src.utils.summary_thresholds import compute_summary_min_chars
-from src.utils.logging_utils import structured_log
 
 router = APIRouter()
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/api_ingest.py:before	2025-10-29 23:21:06.362959
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/api_ingest.py:after	2025-10-30 05:52:43.943596
@@ -5,9 +5,9 @@
 from __future__ import annotations
 
 import base64
+import json
 import logging
 import os
-import json
 from typing import Any, Callable, Dict, Mapping, Optional, Tuple
 from uuid import uuid4
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/config.py:before	2025-10-29 23:21:06.363212
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/config.py:after	2025-10-30 05:52:43.946467
@@ -24,7 +24,7 @@
 from pathlib import Path
 from typing import Any
 
-from pydantic import Field, AliasChoices
+from pydantic import AliasChoices, Field
 from pydantic_settings import BaseSettings, SettingsConfigDict
 
 from src.utils.secrets import resolve_secret
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/main.py:before	2025-10-29 23:21:06.363839
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/main.py:after	2025-10-30 05:52:43.951135
@@ -14,11 +14,12 @@
 
 from src.api.ingest import router as ingest_router
 from src.api.process import router as process_router
+from src.config import get_config
 from src.errors import ValidationError
 from src.logging_setup import configure_logging
 from src.services import drive_client as drive_client_module
 from src.services.docai_helper import OCRService
-from src.services.metrics import PrometheusMetrics, NullMetrics
+from src.services.metrics import NullMetrics, PrometheusMetrics
 from src.services.pdf_writer import MinimalPDFBackend, PDFWriter
 from src.services.pipeline import (
     create_state_store_from_env,
@@ -29,10 +30,9 @@
     RefactoredSummariser,
 )
 from src.startup import hydrate_google_credentials_file
+from src.utils.logging_utils import structured_log
 from src.utils.mode_manager import is_mvp
 from src.utils.secrets import resolve_secret_env
-from src.config import get_config
-from src.utils.logging_utils import structured_log
 
 if TYPE_CHECKING:  # pragma: no cover - type checking only
     from src.services.pipeline import PipelineStateStore, WorkflowLauncher
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/docai_batch_helper.py:before	2025-10-29 23:23:31.403716
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/docai_batch_helper.py:after	2025-10-30 05:52:43.954127
@@ -13,21 +13,21 @@
 
 from __future__ import annotations
 
-from dataclasses import dataclass
-from pathlib import Path
 import json
 import logging
 import time
 import uuid
+from dataclasses import dataclass
+from pathlib import Path
 from typing import Any, Dict, List, Optional
 
+from google.api_core import exceptions as gexc
 from google.api_core.client_options import ClientOptions
-from google.api_core import exceptions as gexc
 from google.cloud import documentai_v1 as documentai
 from google.cloud import storage  # type: ignore[attr-defined]
 
+from src.config import AppConfig, get_config
 from src.errors import OCRServiceError, ValidationError
-from src.config import get_config, AppConfig
 
 _LOG = logging.getLogger("ocr_service.batch")
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/docai_helper.py:before	2025-10-29 23:23:31.403971
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/docai_helper.py:after	2025-10-30 05:52:43.963938
@@ -11,6 +11,7 @@
 import io
 import json
 import logging
+import os
 import random
 import re
 import tempfile
@@ -20,28 +21,27 @@
 from dataclasses import dataclass
 from pathlib import Path
 from typing import Any, Callable, Dict, Iterable, Optional, Protocol, Sequence, cast
-import os
-
+
+from google.api_core import exceptions as gexc
+from google.api_core.client_options import ClientOptions
+from google.cloud import documentai_v1 as documentai
+from google.protobuf.json_format import MessageToDict
 from tenacity import (
     retry,
+    retry_if_exception_type,
+    stop_after_attempt,
     wait_exponential,
-    stop_after_attempt,
-    retry_if_exception_type,
 )
-from google.api_core.client_options import ClientOptions
-from google.api_core import exceptions as gexc
-from google.cloud import documentai_v1 as documentai
-from google.protobuf.json_format import MessageToDict
-
-from src.config import get_config, AppConfig, parse_bool
-from src.utils.docai_request_builder import build_docai_request
+
+from src.config import AppConfig, get_config, parse_bool
 from src.errors import OCRServiceError, ValidationError
 from src.services.docai_batch_helper import batch_process_documents_gcs
 from src.services.pipeline import (
+    PipelineStateStore,
     PipelineStatus,
-    PipelineStateStore,
     create_state_store_from_env,
 )
+from src.utils.docai_request_builder import build_docai_request
 from src.utils.pipeline_failures import publish_pipeline_failure
 
 try:  # pragma: no cover - optional dependency fallback
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/drive_client.py:before	2025-10-29 23:21:06.365045
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/drive_client.py:after	2025-10-30 05:52:43.968413
@@ -11,17 +11,18 @@
 from __future__ import annotations
 
 import io
+import json
 import logging
+import os
+import re
 import time
-import json
-import re
-import os
 from functools import lru_cache
 from typing import Any, Dict, Optional, Tuple
+
+from google.oauth2 import service_account  # type: ignore
 from googleapiclient.discovery import build  # type: ignore
 from googleapiclient.errors import HttpError  # type: ignore
 from googleapiclient.http import MediaIoBaseDownload, MediaIoBaseUpload  # type: ignore
-from google.oauth2 import service_account  # type: ignore
 
 from src.config import get_config
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/metrics.py:before	2025-10-29 23:21:06.365323
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/metrics.py:after	2025-10-30 05:52:43.970003
@@ -59,7 +59,10 @@
         if getattr(app.state, "_prometheus_instrumented", False):
             return metrics
         try:
-            from prometheus_client import CONTENT_TYPE_LATEST, generate_latest  # type: ignore
+            from prometheus_client import (  # type: ignore
+                CONTENT_TYPE_LATEST,
+                generate_latest,
+            )
         except Exception:  # pragma: no cover - optional dependency
             LOG.warning("prometheus_client not installed; metrics endpoint disabled")
             return metrics
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/pdf_writer.py:before	2025-10-29 23:21:06.418151
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/pdf_writer.py:after	2025-10-30 05:52:43.972388
@@ -7,10 +7,10 @@
 
 from __future__ import annotations
 
+import logging
 from dataclasses import dataclass
-from typing import Protocol, Sequence, Dict
 from io import BytesIO
-import logging
+from typing import Dict, Protocol, Sequence
 
 from src.errors import PDFGenerationError
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/pipeline.py:before	2025-10-29 23:21:06.366148
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/pipeline.py:after	2025-10-30 05:52:43.977455
@@ -30,23 +30,23 @@
 import threading
 import time
 import uuid
-from dataclasses import dataclass, field, asdict
+from dataclasses import asdict, dataclass, field
 from enum import Enum
 from typing import Any, Dict, MutableMapping, Protocol, TypedDict
 
 from src.utils.secrets import resolve_secret_env
 
 try:  # pragma: no cover - optional dependency for GCS persistence
+    from google.api_core import exceptions as gexc  # type: ignore
     from google.cloud import storage  # type: ignore
-    from google.api_core import exceptions as gexc  # type: ignore
 except Exception:  # pragma: no cover - allow tests without GCP libs
     storage = None  # type: ignore
     gexc = None  # type: ignore
 
 try:  # pragma: no cover - optional dependency for Workflows
+    from google.api_core.retry import Retry  # type: ignore
     from google.cloud import workflows  # type: ignore
     from google.cloud.workflows import executions_v1  # type: ignore
-    from google.api_core.retry import Retry  # type: ignore
 except Exception:  # pragma: no cover
     workflows = None  # type: ignore
     executions_v1 = None  # type: ignore
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/summariser_refactored.py:before	2025-10-29 23:21:06.418384
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/summariser_refactored.py:after	2025-10-30 05:52:43.987713
@@ -26,16 +26,16 @@
 import time
 from dataclasses import dataclass
 from pathlib import Path
-from typing import Dict, List, Protocol, Any, Iterable, Optional, Tuple
+from typing import Any, Dict, Iterable, List, Optional, Protocol, Tuple
 
 from src.config import get_config
 from src.errors import SummarizationError
+from src.services.docai_helper import clean_ocr_output
 from src.services.pipeline import (
     PipelineStateStore,
     PipelineStatus,
     create_state_store_from_env,
 )
-from src.services.docai_helper import clean_ocr_output
 from src.services.supervisor import CommonSenseSupervisor
 from src.utils.secrets import SecretResolutionError, resolve_secret_env
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/supervisor.py:before	2025-10-29 23:21:06.367442
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/services/supervisor.py:after	2025-10-30 05:52:43.991601
@@ -2,15 +2,14 @@
 
 from __future__ import annotations
 
-from dataclasses import dataclass
-from typing import Dict, Any, Sequence, Iterable, Tuple
 import logging
+import os
 import re
 from collections import Counter
-import os
+from dataclasses import dataclass
+from typing import Any, Dict, Iterable, Sequence, Tuple
 
 from src.services.docai_helper import clean_ocr_output
-
 
 _LOG = logging.getLogger("supervisor")
 
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/utils/pipeline_failures.py:before	2025-10-29 23:23:31.415240
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/utils/pipeline_failures.py:after	2025-10-30 05:52:43.993627
@@ -7,8 +7,8 @@
 
 from __future__ import annotations
 
+import logging
 from dataclasses import dataclass
-import logging
 from typing import Any, Mapping, Optional
 
 _LOG = logging.getLogger("pipeline_failures")
--- /Users/quantanalytics/dev/MCC-OCR-Summary/src/utils/secrets.py:before	2025-10-29 23:21:06.368389
+++ /Users/quantanalytics/dev/MCC-OCR-Summary/src/utils/secrets.py:after	2025-10-30 05:52:43.994861
@@ -6,8 +6,8 @@
 from typing import Optional
 
 try:  # pragma: no cover - optional dependency for local testing
+    from google.api_core import exceptions as gexc  # type: ignore
     from google.cloud import secretmanager  # type: ignore
-    from google.api_core import exceptions as gexc  # type: ignore
 except Exception:  # pragma: no cover
     secretmanager = None  # type: ignore
     gexc = None  # type: ignore
